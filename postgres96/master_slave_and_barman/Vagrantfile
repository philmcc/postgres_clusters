
# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

PG_DATABASE_NAME = "pgdb1"

SLAVE_LIST = ("'slave1'" "'slave2'")

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  #config.vm.box = "centos65-x86_64-20140116"
  config.vm.box = "centos/7"
  config.vm.define "master", primary: true do |server|
    server.vm.hostname = "master.pg"
    server.vm.network "private_network", ip: "192.168.4.2"
    server.vm.provision "shell", path: "scripts/master.sh", args: "PG_DATABASE_NAME SLAVE_LIST"
  end

  #config.vm.define "slave1" do |server|
  #  server.vm.hostname = "slave1.pg"
  #  server.vm.network "private_network", ip: "192.168.4.3"
  #  server.vm.provision "shell", path: "scripts/slave.sh", args: "PG_DATABASE_NAME slave1"
  #end

###########################
###########################

  #config.vm.define "slave2" do |server|
  #  server.vm.hostname = "slave2.pg"
  #  server.vm.network "private_network", ip: "192.168.4.4"
  #  server.vm.provision "shell", path: "scripts/slave.sh", args: "PG_DATABASE_NAME slave2"
  #end

####
#OR
####

  #config.vm.define "slave2" do |server|
  #  server.vm.hostname = "slave2.pg"
  #  server.vm.network "private_network", ip: "192.168.4.4"
  #  server.vm.provision "shell", path: "scripts/cascade_slave.sh", args: "PG_DATABASE_NAME slave2"
  #end

  #config.vm.define "slave3" do |server|
  #  server.vm.hostname = "slave3.pg"
  #  server.vm.network "private_network", ip: "192.168.4.5"
  #  server.vm.provision "shell", path: "scripts/downstream_slave.sh", args: "PG_DATABASE_NAME slave3"
  #end

###########################
###########################

  config.vm.define "PoWA" do |server|
    server.vm.hostname = "PoWA.pg"
    server.vm.network "private_network", ip: "192.168.4.6"
    config.vm.network "forwarded_port", guest: 8888, host: 8881
    server.vm.provision "shell", path: "scripts/PoWA.sh", args: "PG_DATABASE_NAME PoWA"
  end



  config.vm.define "pgbench" do |server|
    server.vm.hostname = "pgbench.pg"
    server.vm.network "private_network", ip: "192.168.4.7"
    server.vm.provision "shell", path: "scripts/pgbench.sh", args: "PG_DATABASE_NAME pgbench"
  end


end
